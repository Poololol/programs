{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Pygame Start": {
		"body": [
			"import pygame",
			"import utils",
			"screen = pygame.display.set_mode((500,500), pygame.RESIZABLE)",
			"clock = pygame.time.Clock()",
			"pygame.font.init",
			"font = pygame.font.Font(None, 20)",
			"screenSize = screen.get_size()",
			"showFPS = False",
			"screenShotKey = pygame.K_F2",
			"FPSKey = pygame.K_f",
			"while True:",
			"\tscreenSize = screen.get_size()",
			"\tpygame.draw.rect(screen, utils.black, ((0,0),screenSize), width=0)",
			"\tif showFPS:",
			"\t\ttext = font.render(str(round(clock.get_fps(),1)), True, utils.white)",
            "\t\tscreen.blit(text, (0,0)",
			"\tevents = pygame.event.get()",
			"\tfor event in events:",
			"\t\tif event.type == pygame.QUIT:",
			"\t\t\tquit()",
			"\t\tif event.type == pygame.KEYDOWN:",
			"\t\t\tif event.__dict__['key'] == screenShotKey:",
			"\t\t\t\tutils.TakeScreenshot(screen)",
			"\t\t\telif event.__dict__['key'] == FPSKey:",
			"\t\t\t\tshowFPS = not showFPS",
			"\tpygame.display.update()",
			"\tclock.tick(60)"
		]
	}
}